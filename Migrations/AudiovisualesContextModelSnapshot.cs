// <auto-generated />
using System;
using CrudAudiovisuales.models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CrudAudiovisuales.Migrations
{
    [DbContext(typeof(AudiovisualesContext))]
    partial class AudiovisualesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("CrudAudiovisuales.models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Cedula")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Cedula"), "utf8mb3");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Estado"), "utf8mb3");

                    b.Property<DateOnly?>("FechaIngreso")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Nombre"), "utf8mb3");

                    b.Property<string>("TandaLabor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("TandaLabor"), "utf8mb3");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("empleados", (string)null);
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Descripcion"), "utf8mb3");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Estado"), "utf8mb3");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int")
                        .HasColumnName("MarcaID");

                    b.Property<int>("ModeloId")
                        .HasColumnType("int")
                        .HasColumnName("ModeloID");

                    b.Property<string>("NoSerial")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("NoSerial"), "utf8mb3");

                    b.Property<string>("ServiceTag")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("ServiceTag"), "utf8mb3");

                    b.Property<int>("TipoEquipoId")
                        .HasColumnType("int")
                        .HasColumnName("TipoEquipoID");

                    b.Property<int?>("TipoTecnologiaConexionId")
                        .HasColumnType("int")
                        .HasColumnName("TipoTecnologiaConexionID");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MarcaId" }, "MarcaID");

                    b.HasIndex(new[] { "ModeloId" }, "ModeloID");

                    b.HasIndex(new[] { "TipoEquipoId" }, "TipoEquipoID");

                    b.HasIndex(new[] { "TipoTecnologiaConexionId" }, "TipoTecnologiaConexionID");

                    b.ToTable("equipos", (string)null);
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Descripcion"), "utf8mb3");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Estado"), "utf8mb3");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("marcas", (string)null);
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Descripcion"), "utf8mb3");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Estado"), "utf8mb3");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int")
                        .HasColumnName("MarcaID");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MarcaId" }, "MarcaID")
                        .HasDatabaseName("MarcaID1");

                    b.ToTable("modelos", (string)null);
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Rentadevolucion", b =>
                {
                    b.Property<int>("NoPrestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("EmpleadoID");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int")
                        .HasColumnName("EquipoID");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Estado"), "utf8mb3");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("datetime");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("NoPrestamo")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "EmpleadoId" }, "EmpleadoID");

                    b.HasIndex(new[] { "EquipoId" }, "EquipoID");

                    b.HasIndex(new[] { "UsuarioId" }, "UsuarioID");

                    b.ToTable("rentadevolucion", (string)null);
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Tecnologiasconexion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Descripcion"), "utf8mb3");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Estado"), "utf8mb3");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tecnologiasconexion", (string)null);
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Tiposdeequipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Descripcion"), "utf8mb3");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Estado"), "utf8mb3");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tiposdeequipos", (string)null);
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Cedula")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Cedula"), "utf8mb3");

                    b.Property<string>("Contrasena")
                        .HasColumnType("longtext");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Estado"), "utf8mb3");

                    b.Property<string>("NoCarnet")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("NoCarnet"), "utf8mb3");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Nombre"), "utf8mb3");

                    b.Property<string>("Nombredeusuario")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("TipoPersona"), "utf8mb3");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("TipoUsuario"), "utf8mb3");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Equipo", b =>
                {
                    b.HasOne("CrudAudiovisuales.models.Marca", "Marca")
                        .WithMany("Equipos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("equipos_ibfk_2");

                    b.HasOne("CrudAudiovisuales.models.Modelo", "Modelo")
                        .WithMany("Equipos")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("equipos_ibfk_3");

                    b.HasOne("CrudAudiovisuales.models.Tiposdeequipo", "TipoEquipo")
                        .WithMany("Equipos")
                        .HasForeignKey("TipoEquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("equipos_ibfk_1");

                    b.HasOne("CrudAudiovisuales.models.Tecnologiasconexion", "TipoTecnologiaConexion")
                        .WithMany("Equipos")
                        .HasForeignKey("TipoTecnologiaConexionId")
                        .HasConstraintName("equipos_ibfk_4");

                    b.Navigation("Marca");

                    b.Navigation("Modelo");

                    b.Navigation("TipoEquipo");

                    b.Navigation("TipoTecnologiaConexion");
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Modelo", b =>
                {
                    b.HasOne("CrudAudiovisuales.models.Marca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("modelos_ibfk_1");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Rentadevolucion", b =>
                {
                    b.HasOne("CrudAudiovisuales.models.Empleado", "Empleado")
                        .WithMany("Rentadevolucions")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("rentadevolucion_ibfk_1");

                    b.HasOne("CrudAudiovisuales.models.Equipo", "Equipo")
                        .WithMany("Rentadevolucions")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("rentadevolucion_ibfk_2");

                    b.HasOne("CrudAudiovisuales.models.Usuario", "Usuario")
                        .WithMany("Rentadevolucions")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("rentadevolucion_ibfk_3");

                    b.Navigation("Empleado");

                    b.Navigation("Equipo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Empleado", b =>
                {
                    b.Navigation("Rentadevolucions");
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Equipo", b =>
                {
                    b.Navigation("Rentadevolucions");
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Marca", b =>
                {
                    b.Navigation("Equipos");

                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Modelo", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Tecnologiasconexion", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Tiposdeequipo", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("CrudAudiovisuales.models.Usuario", b =>
                {
                    b.Navigation("Rentadevolucions");
                });
#pragma warning restore 612, 618
        }
    }
}
